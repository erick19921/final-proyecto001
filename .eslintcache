[{"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\index.js":"1","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\App.js":"2","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\reportWebVitals.js":"3","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Navbar\\Navbar.js":"4","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\Home.js":"5","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\listCajeros.js":"6","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\PagosCliente.js":"7","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\User.js":"8","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\TipoPago.js":"9","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\Factura.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1273,"mtime":1611862081780,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2273,"mtime":1611862114923,"results":"15","hashOfConfig":"12"},{"size":2392,"mtime":1611862174005,"results":"16","hashOfConfig":"12"},{"size":12174,"mtime":1611855303882,"results":"17","hashOfConfig":"12"},{"size":7546,"mtime":1611861215691,"results":"18","hashOfConfig":"12"},{"size":16026,"mtime":1611861172688,"results":"19","hashOfConfig":"12"},{"size":5715,"mtime":1611861460996,"results":"20","hashOfConfig":"12"},{"size":5581,"mtime":1611878056038,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1douulz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\index.js",[],["48","49"],"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\App.js",["50","51","52"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Navigation from './component/Navbar/Navbar';\nimport Home from './component/Pages/Home';\nimport User from './component/Pages/User';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CajeroList from './component/Pages/listCajeros';\nimport PagoCliente from './component/Pages/PagosCliente';\nimport TipoPago from './component/Pages/TipoPago';\nimport Factura from './component/Pages/Factura';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navigation />\n        <div className=\"container-fluid\">\n          <Route exact path='/admin' component={Home} />\n          <Route exact path='/admin/user' component={User} />\n          <Route exact path='/admin/listCajeros' component={CajeroList} />\n          <Route exact path='/admin/TipoPago' component={TipoPago} />\n          <Route exact path='/admin/PagosCliente' component={PagoCliente} />\n          <Route exact path='/admin/Facturas' component={Factura} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\reportWebVitals.js",[],"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Navbar\\Navbar.js",[],"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\Home.js",[],"C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\listCajeros.js",["53","54"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nclass CajeroList extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        modalInsertar: false,\r\n        modalEliminar: false,\r\n        form: {\r\n            cedula: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            nombre_usuario: '',\r\n            contrasenia: '',\r\n            tipo_usuario: '',\r\n            fecha_nacimiento: '',\r\n            ciudad_nacimiento: '',\r\n            direccion: '',\r\n            telefono: '',\r\n            email: '',\r\n            activo: '',\r\n        }\r\n    }\r\n    peticionGet = () => {\r\n        axios.get('https://c-x-c-utn.herokuapp.com/usuario/Cajero').then(response => {\r\n            this.setState({ data: response.data });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPost = async () => {\r\n        await axios.post('https://c-x-c-utn.herokuapp.com/usuario?cedula='+this.state.form.cedula+'&nombre='+this.state.form.nombre+'&apellido='+this.state.form.apellido+'&nombre_usuario='+this.state.form.nombre_usuario+'&contrasenia='+this.state.form.contrasenia+'&tipo_usuario='+this.state.form.tipo_usuario+'&fecha_nacimiento='+this.state.form.fecha_nacimiento+'&ciudad_nacimiento='+this.state.form.ciudad_nacimiento+'&direccion='+this.state.form.direccion+'&telefono='+this.state.form.telefono+'&email='+this.state.form.email+'&activo='+this.state.form.activo, this.state.form).then(response => {\r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPut = () => {\r\n        axios.put('https://c-x-c-utn.herokuapp.com/usuario?cedula='+this.state.form.cedula+'&nombre='+this.state.form.nombre+'&apellido='+this.state.form.apellido+'&nombre_usuario='+this.state.form.nombre_usuario+'&contrasenia='+this.state.form.contrasenia+'&tipo_usuario='+this.state.form.tipo_usuario+'&fecha_nacimiento='+this.state.form.fecha_nacimiento+'&ciudad_nacimiento='+this.state.form.ciudad_nacimiento+'&direccion='+this.state.form.direccion+'&telefono='+this.state.form.telefono+'&email='+this.state.form.email+'&activo='+this.state.form.activo, this.state.form).then(response => {\r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n    peticionDelete = () => {\r\n        axios.delete('https://c-x-c-utn.herokuapp.com/usuario?cedula=' + this.state.form.cedula).then(response => {\r\n            this.setState({ modalEliminar: false });\r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n    modalInsertar = () => {\r\n        this.setState({ modalInsertar: !this.state.modalInsertar });\r\n    }\r\n\r\n    seleccionarUsuario = (usuario) => {\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                cedula: usuario.cedula,\r\n                nombre: usuario.nombre,\r\n                apellido: usuario.apellido,\r\n                nombre_usuario: usuario.nombre_usuario,\r\n                contrasenia: usuario.contrasenia,\r\n                tipo_usuario: usuario.tipo_usuario,\r\n                fecha_nacimiento: usuario.fecha_nacimiento,\r\n                ciudad_nacimiento: usuario.ciudad_nacimiento,\r\n                direccion: usuario.direccion,\r\n                telefono: usuario.telefono,\r\n                email: usuario.email,\r\n                activo: usuario.activo,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    render() {\r\n        const { form } = this.state;\r\n        return (\r\n            \r\n            <div className=\"App\">\r\n                <br /><br /><br />\r\n                <button className=\"btn btn-success\" onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.modalInsertar() }}>Agregar Usuario</button>\r\n                <br /><br />\r\n                <table className=\"table \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CÃ©dula</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Nombre Usuario</th>\r\n                            <th>Tipo Usuario</th>\r\n                            <th>Fecha Nacimiento</th>\r\n                            <th>Ciudad Nacimiento</th>\r\n                            <th>Direccion</th>\r\n                            <th>Telefono</th>\r\n                            <th>Email</th>\r\n                            <th>Activo</th>\r\n                            <th>Opciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.data.map(usuario => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{usuario.cedula}</td>\r\n                                    <td>{usuario.nombre}</td>\r\n                                    <td>{usuario.apellido}</td>\r\n                                    <td>{usuario.nombre_usuario}</td>\r\n                                    <td>{usuario.tipo_usuario}</td>\r\n                                    <td>{usuario.fecha_nacimiento}</td>\r\n                                    <td>{usuario.ciudad_nacimiento}</td>\r\n                                    <td>{usuario.direccion}</td>\r\n                                    <td>{usuario.telefono}</td>\r\n                                    <td>{usuario.email}</td>\r\n                                    <td>{usuario.activo}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => { this.seleccionarUsuario(usuario); this.modalInsertar() }}><FontAwesomeIcon icon={faEdit} /></button>\r\n                                        {\"   \"}\r\n                                        <button className=\"btn btn-danger\" onClick={() => { this.seleccionarUsuario(usuario); this.setState({ modalEliminar: true }) }}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader style={{ display: 'block' }}>\r\n                        <span style={{ float: 'right' }} onClick={() => this.modalInsertar()}>x</span>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"id\">Cedula</label>\r\n                            <input className=\"form-control\" type=\"text\" pattern=\"[0-9]{10}\" maxLength=\"10\" name=\"cedula\" id=\"cedula\" onChange={this.handleChange} value={form ? form.cedula : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"nombre\" id=\"nombre\" onChange={this.handleChange} value={form ? form.nombre : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"apellido\">Apellido</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"apellido\" id=\"apellido\" onChange={this.handleChange} value={form ? form.apellido : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"nombre_usuario\">Nombre Usuario</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"nombre_usuario\" id=\"nombre_usuario\" onChange={this.handleChange} value={form ? form.nombre_usuario : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"contrasenia\">ContraseÃ±a</label>\r\n                            <input className=\"form-control\" type=\"password\" name=\"contrasenia\" id=\"contrasenia\" onChange={this.handleChange} value={form ? form.contrasenia : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"tipo_usuario\">Tipo Usuario</label>\r\n                            <select name=\"tipo_usuario\" value={form ? form.tipo_usuario : ''} onChange={this.handleChange}>\r\n                                <option value=\"Cajero\">Cajero</option>\r\n                            </select>\r\n                            <br />\r\n                            <label htmlFor=\"fecha_nacimiento\">Fecha Nacimiento</label>\r\n                            <input className=\"form-control\" type=\"date\" name=\"fecha_nacimiento\" id=\"fecha_nacimiento\" onChange={this.handleChange.bind(this)} value={form ? form.fecha_nacimiento : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"ciudad_nacimiento\">Ciudad Nacimiento</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"ciudad_nacimiento\" id=\"ciudad_nacimiento\" onChange={this.handleChange} value={form ? form.ciudad_nacimiento : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"direccion\">Direccion</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"direccion\" id=\"direccion\" onChange={this.handleChange} value={form ? form.direccion : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"telefono\">Telefono</label>\r\n                            <input className=\"form-control\" type=\"tel\" pattern=\"[0-9]{10}\" maxLength=\"10\" name=\"telefono\" id=\"telefono\" onChange={this.handleChange} value={form ? form.telefono : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"email\">E-Mail</label>\r\n                            <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} value={form ? form.email : ''} />\r\n                            <br />\r\n                            <label htmlFor=\"activo\">Activo</label>\r\n                            <select name=\"activo\" value={form ? form.activo : ''} onChange={this.handleChange}>\r\n                                <option value=\"true\">Si</option>\r\n                                <option value=\"false\">No</option>\r\n                            </select>\r\n                            <br />\r\n                        </div>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {this.state.tipoModal === 'insertar' ?\r\n                            <button className=\"btn btn-success\" onClick={() => this.peticionPost()}>\r\n                                Insertar\r\n                      </button> : <button className=\"btn btn-primary\" onClick={() => this.peticionPut()}>\r\n                                Actualizar\r\n                      </button>\r\n                        }\r\n                        <button className=\"btn btn-danger\" onClick={() => this.modalInsertar()}>Cancelar</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalBody>\r\n                        EstÃ¡s seguro que deseas eliminar este Usuario {form && form.nombre}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-danger\" onClick={() => this.peticionDelete()}>SÃ­</button>\r\n                        <button className=\"btn btn-secundary\" onClick={() => this.setState({ modalEliminar: false })}>No</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CajeroList","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\PagosCliente.js",["55","56","57","58","59"],"import React, { Component } from 'react';\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faUserCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { extend } from 'jquery';\n\nconst url=\"https://c-x-c-utn.herokuapp.com/pago\";\nconst url2=\"https://fac-utn.herokuapp.com/factura\";\n\n\nclass PagosCliente extends React.Component {\nstate={\n  data:[],\n  modalInsertar: false,\n  modalEliminar: false,\n  form:{\n    id_pago_cliente: '',\n    id_factura: '',\n    codigo_pago: '',\n    descripcion: '',\n    numero_cuenta: '',\n    valor_pago: '',\n    valor_factura:''\n  }\n}\n\npeticionGet=()=>{\n  axios.get(url).then(response=>{\n    this.setState({data: response.data});\n  }).catch(error=>{\n    console.log(error.message);\n  })\n  }\n\npeticionPost=async()=>{\n   await axios.post('https://c-x-c-utn.herokuapp.com/pago?id_pago_cliente='+this.state.form.id_pago_cliente+'&id_factura='+this.state.form.id_factura+'&codigo_pago='+this.state.form.codigo_pago+'&descripcion='+this.state.form.descripcion+'&numero_cuenta='+this.state.form.numero_cuenta+'&valor_pago='+this.state.form.valor_pago+'&valor_factura='+this.state.form.valor_factura,this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  }).catch(error=>{\n    console.log(error.message);\n  })\n}\n\npeticionPut=()=>{\n  axios.put('https://c-x-c-utn.herokuapp.com/pago?id_pago_cliente='+this.state.form.id_pago_cliente+'&id_factura='+this.state.form.id_factura+'&codigo_pago='+this.state.form.codigo_pago+'&descripcion='+this.state.form.descripcion+'&numero_cuenta='+this.state.form.numero_cuenta+'&valor_pago='+this.state.form.valor_pago+'&valor_factura='+this.state.form.valor_factura,this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  })\n}\n\npeticionDelete=()=>{\n  axios.delete('https://c-x-c-utn.herokuapp.com/pago?id_pago_cliente='+this.state.form.id_pago_cliente).then(response=>{\n    this.setState({modalEliminar: false});\n    this.peticionGet();\n  })\n}\n\nmodalInsertar=()=>{\n  this.setState({modalInsertar: !this.state.modalInsertar});\n}\n\nseleccionarCxc=(cxc)=>{\n  this.setState({\n    tipoModal: 'actualizar',\n    form: {\n      id_pago_cliente: cxc.id_pago_cliente,\n      id_factura: cxc.id_factura,\n      codigo_pago: cxc.codigo_pago,\n      descripcion: cxc.descripcion,\n      numero_cuenta: cxc.numero_cuenta,\n      valor_pago: cxc.valor_pago,\n      valor_factura : cxc.valor_factura\n\n    }\n  })\n}\n\nhandleChange=async e=>{\ne.persist();\nawait this.setState({\n  form:{\n    ...this.state.form,\n    [e.target.name]: e.target.value\n  }\n});\nconsole.log(this.state.form);\n}\n\n  componentDidMount() {\n    this.peticionGet();\n\n  }\n  \n\n  render(){\n    const {form}=this.state;\n  return (\n    <div className=\"PagosCliente\">\n    <br /><br /><br />\n  <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}>Agregar CXC</button>\n  <br /><br />\n    <table className=\"table \">\n      <thead>\n        <tr>\n          <th>ID Pago Cliente</th>\n          <th>ID Factura</th>\n          <th>Codigo de pago</th>\n          <th>Descripcion</th>\n          <th>Numero de cuenta</th>\n          <th>Valor de pago</th>\n          <th>Valor de la factura</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.state.data.map(cxc=>{\n          return(\n            <tr>\n          <td>{cxc.id_pago_cliente}</td>\n          <td>{cxc.id_factura}</td>\n          <td>{cxc.codigo_pago}</td>\n          <td>{cxc.descripcion}</td>\n          <td>{cxc.numero_cuenta}</td>\n          <td>{cxc.valor_pago}</td>\n          <td>{cxc.valor_factura}</td>\n          <td>\n                <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarCxc(cxc); this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\n                {\"   \"}\n                <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarCxc(cxc); this.setState({modalEliminar: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\n                </td>\n          </tr>\n          )\n        })}\n      </tbody>\n    </table>\n\n\n\n    <Modal isOpen={this.state.modalInsertar}>\n                <ModalHeader style={{display: 'block'}}>\n                  <span style={{float: 'right'}} onClick={()=>this.modalInsertar()}>x</span>\n                </ModalHeader>\n                <ModalBody>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"id_pago_cliente\">ID Pago Cliente</label>\n                    <input className=\"form-control\" type=\"text\" name=\"id_pago_cliente\" id=\"id_pago_cliente\" onChange={this.handleChange} value={form?form.id_pago_cliente: ''}/>\n                    <br />\n                    <label htmlFor=\"id_factura\">ID Factura</label>\n                    <input className=\"form-control\" type=\"text\" name=\"id_factura\" id=\"id_factura\" onChange={this.handleChange} value={form?form.id_factura: ''}/>\n                    <br />\n                    <label htmlFor=\"codigo_pago\">Codigo de pago</label>\n                    <input className=\"form-control\" type=\"text\" name=\"codigo_pago\" id=\"codigo_pago\" onChange={this.handleChange} value={form?form.codigo_pago:''}/>\n                    <br />\n                    <label htmlFor=\"descripcion\">Descripcion</label>\n                    <input className=\"form-control\" type=\"text\" name=\"descripcion\" id=\"descripcion\" onChange={this.handleChange} value={form?form.descripcion: ''}/>\n                    <br />\n                    <label htmlFor=\"numero_cuenta\">Numero de cuenta</label>\n                    <input className=\"form-control\" type=\"text\" name=\"numero_cuenta\" id=\"numero_cuenta\" onChange={this.handleChange} value={form?form.numero_cuenta:''}/>\n                    <br />\n                    <label htmlFor=\"valor_pago\">Valor de pago</label>\n                    <input className=\"form-control\" type=\"text\" name=\"valor_pago\" id=\"valor_pago\" onChange={this.handleChange} value={form?form.cvalor_pago: ''}/>\n                    <br />   \n                    <label htmlFor=\"valor_factura\">Valor de la factura</label>\n                    <input className=\"form-control\" type=\"text\" name=\"valor_factura\" id=\"valor_factura\" onChange={this.handleChange} value={form?form.valor_factura: ''}/>\n                    <br />                    \n                  </div>\n                </ModalBody>\n\n                <ModalFooter>\n                  {this.state.tipoModal=='insertar'?\n                    <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\n                    Insertar\n                  </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\n                    Actualizar\n                  </button>\n  }\n                    <button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</button>\n                </ModalFooter>\n          </Modal>\n\n\n          <Modal isOpen={this.state.modalEliminar}>\n            <ModalBody>\n               EstÃ¡s seguro que deseas eliminar el registro de pago {form && form.codigo_pago} ?\n            </ModalBody>\n            <ModalFooter>\n              <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>SÃ­</button>\n              <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\n            </ModalFooter>\n          </Modal>\n  </div>\n\n  );\n}\n}\nexport default PagosCliente;\n","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\User.js",["60","61"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\n//import 'jspdf-autotable'\r\n\r\n\r\nclass User extends Component {\r\n    state = {\r\n        data: [],\r\n        modalInsertar: false,\r\n        modalEliminar: false,\r\n        form: {\r\n            cedula: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            nombre_usuario: '',\r\n            contrasenia: '',\r\n            tipo_usuario: '',\r\n            fecha_nacimiento: '',\r\n            ciudad_nacimiento: '',\r\n            direccion: '',\r\n            telefono: '',\r\n            email: '',\r\n            activo: ''\r\n        }\r\n    }\r\n\r\n    //const [usuario, setUsuario] = usestate(this.state)\r\n    peticionGet = () => {\r\n        axios.get('https://c-x-c-utn.herokuapp.com/usuario').then(response => {\r\n            this.setState({ data: response.data });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPost = async () => {\r\n        await axios.post('https://c-x-c-utn.herokuapp.com/usuario?cedula=' + this.state.form.cedula + '&nombre=' + this.state.form.nombre + '&apellido=' + this.state.form.apellido + '&nombre_usuario=' + this.state.form.nombre_usuario + '&contrasenia=' + this.state.form.contrasenia + '&tipo_usuario=' + this.state.form.tipo_usuario + '&fecha_nacimiento=' + this.state.form.fecha_nacimiento + '&ciudad_nacimiento=' + this.state.form.ciudad_nacimiento + '&direccion=' + this.state.form.direccion + '&telefono=' + this.state.form.telefono + '&email=' + this.state.form.email + '&activo=' + this.state.form.activo, this.state.form).then(response => {\r\n                        this.modalInsertar();\r\n                        this.peticionGet();\r\n                    }).catch(error => {\r\n                        console.log(error.message);\r\n                    })\r\n        /*const [usuario, setUsuario] = usestate(this.state)\r\n        if ((usuario.cedula.trim()) && (usuario.nombre.trim()) && (usuario.apellido.trim()) && (usuario.nombre_usuario.trim()) && (usuario.contrasenia.trim()) && (usuario.ciudad_nacimiento.trim()) && (usuario.direccion.trim()) && (usuario.telefono.trim()) && (usuario.email.trim())) {\r\n            if (this.validarCedula()) {\r\n                if (this.validarEmail()) {\r\n                    \r\n                } else {\r\n                    toast.current.show({ severity: 'error', summary: 'Error Message', detail: 'Correo Incorrecto', life: 3000 });\r\n                }\r\n            } else {\r\n                toast.current.show({ severity: 'error', summary: 'Error Message', detail: 'CÃ©dula Incorrecta', life: 3000 });\r\n            }\r\n        } else {\r\n            toast.current.show({ severity: 'error', summary: 'Error Message', detail: 'Campo vacios', life: 3000 });\r\n        }*/\r\n    }\r\n\r\n\r\n    peticionPut = () => {\r\n        axios.put('https://c-x-c-utn.herokuapp.com/usuario?cedula=' + this.state.form.cedula + '&nombre=' + this.state.form.nombre + '&apellido=' + this.state.form.apellido + '&nombre_usuario=' + this.state.form.nombre_usuario + '&contrasenia=' + this.state.form.contrasenia + '&tipo_usuario=' + this.state.form.tipo_usuario + '&fecha_nacimiento=' + this.state.form.fecha_nacimiento + '&ciudad_nacimiento=' + this.state.form.ciudad_nacimiento + '&direccion=' + this.state.form.direccion + '&telefono=' + this.state.form.telefono + '&email=' + this.state.form.email + '&activo=' + this.state.form.activo, this.state.form).then(response => {\r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n    peticionDelete = () => {\r\n        axios.delete('https://c-x-c-utn.herokuapp.com/usuario?cedula=' + this.state.form.cedula).then(response => {\r\n            this.setState({ modalEliminar: false });\r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n    modalInsertar = () => {\r\n        this.setState({ modalInsertar: !this.state.modalInsertar });\r\n    }\r\n\r\n    seleccionarUsuario = (usuario) => {\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                cedula: usuario.cedula,\r\n                nombre: usuario.nombre,\r\n                apellido: usuario.apellido,\r\n                nombre_usuario: usuario.nombre_usuario,\r\n                contrasenia: usuario.contrasenia,\r\n                tipo_usuario: usuario.tipo_usuario,\r\n                fecha_nacimiento: usuario.fecha_nacimiento,\r\n                ciudad_nacimiento: usuario.ciudad_nacimiento,\r\n                direccion: usuario.direccion,\r\n                telefono: usuario.telefono,\r\n                email: usuario.email,\r\n                activo: usuario.activo\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n/*\r\n    validarCedula() {\r\n        var cad = usuario.cedula.trim();\r\n        var total = 0;\r\n        var longitud = cad.length;\r\n        var longcheck = longitud - 1;\r\n\r\n        if (cad !== \"\" && longitud === 10) {\r\n            for (let i = 0; i < longcheck; i++) {\r\n                if (i % 2 === 0) {\r\n                    var aux = cad.charAt(i) * 2;\r\n                    if (aux > 9) aux -= 9;\r\n                    total += aux;\r\n                } else {\r\n                    total += parseInt(cad.charAt(i)); // parseInt o concatenarÃ¡ en lugar de sumar\r\n                }\r\n            }\r\n\r\n            total = total % 10 ? 10 - total % 10 : 0;\r\n\r\n            if (cad.charAt(longitud - 1) == total) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    validarEmail() {\r\n        if (/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(compras.correo)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    */\r\n/*\r\n    generarPDF = (rowData) => {\r\n        var doc = new jsPDF('p', 'pt');\r\n        doc.setFontSize(20)\r\n        doc.getStyle('normal', 'bold')\r\n        doc.text(275, 40, 'Reporte Usuarios')\r\n        var columns = [\"Cedula\", \"Nombre\", \"Apellido\", \"Nombre Usuario\", \"Tipo Usuario\", \"Fecha Nacimiento\", \"Ciudad Nacimiento\", \"DirecciÃ³n\", \"TelÃ©fono\", \"Email\"]\r\n        for (let i = 0; i < rowData.usuario.length; i++) {\r\n            data[i] = [rowData.usuario[i].cedula, rowData.usuario[i].nombre, rowData.usuario[i].apellido, rowData.usuario[i].nombre_usuario, rowData.usuario[i].tipo_usuario, rowData.usuario[i].fecha_nacimiento, rowData.usuario[i].ciudad_nacimiento, rowData.usuario[i].direccion, rowData.usuario[i].telefono, rowData.usuario[i].email]\r\n        }\r\n        doc.autoTable(columns, data,\r\n            { margin: { top: 200 } }\r\n        )\r\n        doc.save('Lista usuarios.pdf')\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const { form } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <br /><br /><br />\r\n                <button className=\"btn btn-success\" onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.modalInsertar() }}>Agregar Usuario</button>\r\n                <br /><br />\r\n                <table className=\"table \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CÃ©dula</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Nombre Usuario</th>\r\n                            <th>Tipo Usuario</th>\r\n                            <th>Fecha Nacimiento</th>\r\n                            <th>Ciudad Nacimiento</th>\r\n                            <th>Direccion</th>\r\n                            <th>Telefono</th>\r\n                            <th>Email</th>\r\n                            <th>Activo</th>\r\n                            <th>Opciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.data.map(usuario => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{usuario.cedula}</td>\r\n                                    <td>{usuario.nombre}</td>\r\n                                    <td>{usuario.apellido}</td>\r\n                                    <td>{usuario.nombre_usuario}</td>\r\n                                    <td>{usuario.tipo_usuario}</td>\r\n                                    <td>{usuario.fecha_nacimiento}</td>\r\n                                    <td>{usuario.ciudad_nacimiento}</td>\r\n                                    <td>{usuario.direccion}</td>\r\n                                    <td>{usuario.telefono}</td>\r\n                                    <td>{usuario.email}</td>\r\n                                    <td>{usuario.activo}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => { this.seleccionarUsuario(usuario); this.modalInsertar() }}><FontAwesomeIcon icon={faEdit} /></button>\r\n                                        {\"   \"}\r\n                                        <button className=\"btn btn-danger\" onClick={() => { this.seleccionarUsuario(usuario); this.setState({ modalEliminar: true }) }}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader style={{ display: 'block' }}>\r\n                        <span style={{ float: 'right' }} onClick={() => this.modalInsertar()}>x</span>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <form action=\"\" className=\"formulario\" id=\"formulario\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"cedula_usuario\">Cedula</label>\r\n                                <input className=\"form-control\" type=\"text\" pattern=\"[0-9]{10}\" maxLength=\"10\" name=\"cedula\" id=\"cedula\" onChange={this.handleChange} value={form ? form.cedula : ''} required autoFocus />\r\n                                <br />\r\n                                <label htmlFor=\"nombre_usuario\">Nombre</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"nombre\" id=\"nombre\" onChange={this.handleChange} value={form ? form.nombre : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"apellido_usuario\">Apellido</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"apellido\" id=\"apellido\" onChange={this.handleChange} value={form ? form.apellido : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"nombre_us\">Nombre Usuario</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"nombre_usuario\" id=\"nombre_usuario\" onChange={this.handleChange} value={form ? form.nombre_usuario : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"contrasenia_usuario\">ContraseÃ±a</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"contrasenia\" id=\"contrasenia\" onChange={this.handleChange} value={form ? form.contrasenia : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"tipo_us\">Tipo Usuario</label>\r\n                                <select name=\"tipo_usuario\" value={form ? form.tipo_usuario : ''} onChange={this.handleChange}>\r\n                                    <option value=\"0\">Seleccione el tipo de usuario:</option>\r\n                                    <option value=\"Administrador\">Administrador</option>\r\n                                    <option value=\"Cajero\">Cajero</option>\r\n                                </select>\r\n                                <br />\r\n                                <label htmlFor=\"fecha_nacimiento_usuario\">Fecha Nacimiento</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"fecha_nacimiento\" id=\"fecha_nacimiento\" onChange={this.handleChange.bind(this)} value={form ? form.fecha_nacimiento : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"ciudad_nacimiento_usuario\">Ciudad Nacimiento</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"ciudad_nacimiento\" id=\"ciudad_nacimiento\" onChange={this.handleChange} value={form ? form.ciudad_nacimiento : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"direccion_usuario\">Direccion</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"direccion\" id=\"direccion\" onChange={this.handleChange} value={form ? form.direccion : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"telefono_usuario\">Telefono</label>\r\n                                <input className=\"form-control\" type=\"tel\" pattern=\"[0-9]\" maxLength=\"10\" name=\"telefono\" id=\"telefono\" onChange={this.handleChange} value={form ? form.telefono : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"email_usuario\">E-Mail</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} value={form ? form.email : ''} />\r\n                                <br />\r\n                                <label htmlFor=\"activo_usuario\">Activo</label>\r\n                                <select name=\"activo\" value={form ? form.activo : ''} onChange={this.handleChange}>\r\n                                    <option value=\"0\">Seleccione el estado del usuaio:</option>\r\n                                    <option value=\"Activo\">Activo</option>\r\n                                    <option value=\"Inactivo\">Inactivo</option>\r\n                                </select>\r\n                            </div>\r\n                        </form>\r\n                        <script src=\"validacion.js\"></script>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {this.state.tipoModal === 'insertar' ?\r\n                            <button className=\"btn btn-success\" onClick={() => this.peticionPost()}>\r\n                                Insertar\r\n                      </button> : <button className=\"btn btn-primary\" onClick={() => this.peticionPut()}>\r\n                                Actualizar\r\n                      </button>\r\n                        }\r\n                        <button className=\"btn btn-danger\" onClick={() => this.modalInsertar()}>Cancelar</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalBody>\r\n                        EstÃ¡s seguro que deseas eliminar este Usuario {form && form.nombre}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-danger\" onClick={() => this.peticionDelete()}>SÃ­</button>\r\n                        <button className=\"btn btn-secundary\" onClick={() => this.setState({ modalEliminar: false })}>No</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default User","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\TipoPago.js",["62"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst url=\"https://c-x-c-utn.herokuapp.com/TipoPago\";\r\n\r\nclass TipoPago extends Component {\r\nstate={\r\n  data:[],\r\n  modalInsertar: false,\r\n  modalEliminar: false,\r\n  form:{\r\n    codigo_pago: '',\r\n    nombre_tp: '',\r\n    estado: ''\r\n  }\r\n}\r\n\r\npeticionGet=()=>{\r\naxios.get(url).then(response=>{\r\n  this.setState({data: response.data});\r\n}).catch(error=>{\r\n  console.log(error.message);\r\n})\r\n}\r\n\r\n\r\n\r\npeticionPost=async()=>{\r\n   await axios.post('https://c-x-c-utn.herokuapp.com/TipoPago?codigo_pago='+this.state.form.codigo_pago+'&nombre_tp='+this.state.form.nombre_tp+'&estado='+this.state.form.estado,this.state.form).then(response=>{\r\n    this.modalInsertar();\r\n    this.peticionGet();\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionPut=()=>{\r\n  axios.put('https://c-x-c-utn.herokuapp.com/TipoPago?codigo_pago='+this.state.form.codigo_pago+'&nombre_tp='+this.state.form.nombre_tp+'&estado='+this.state.form.estado,this.state.form,this.state.form).then(response=>{\r\n    this.modalInsertar();\r\n    this.peticionGet();\r\n  })\r\n}\r\n\r\npeticionDelete=()=>{\r\n  axios.delete('https://c-x-c-utn.herokuapp.com/TipoPago?codigo_pago='+this.state.form.codigo_pago).then(response=>{\r\n    this.setState({modalEliminar: false});\r\n    this.peticionGet();\r\n  })\r\n}\r\n\r\nmodalInsertar=()=>{\r\n  this.setState({modalInsertar: !this.state.modalInsertar});\r\n}\r\n\r\nseleccionarCxc=(cxc)=>{\r\n  this.setState({\r\n    tipoModal: 'actualizar',\r\n    form: {\r\n      codigo_pago: cxc.codigo_pago,\r\n      nombre_tp: cxc.nombre_tp,\r\n      estado: cxc.estado\r\n    }\r\n  })\r\n}\r\n\r\nhandleChange=async e=>{\r\ne.persist();\r\nawait this.setState({\r\n  form:{\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n});\r\nconsole.log(this.state.form);\r\n}\r\n\r\n  componentDidMount() {\r\n    this.peticionGet();\r\n  }\r\n  \r\n\r\n  render(){\r\n    const {form}=this.state;\r\n  return (\r\n    <div className=\"TipoPago\">\r\n    <br /><br /><br />\r\n  <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}>Agregar CXC</button>\r\n  <br /><br />\r\n    <table className=\"table \">\r\n      <thead>\r\n        <tr>\r\n          <th>Codigo de pago</th>\r\n          <th>Nombre</th>\r\n          <th>Estado</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.data.map(cxc=>{\r\n          return(\r\n            <tr>\r\n          <td>{cxc.codigo_pago}</td>\r\n          <td>{cxc.nombre_tp}</td>\r\n          <td>{cxc.estado}</td>\r\n          <td>\r\n                <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarCxc(cxc); this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\r\n                {\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarCxc(cxc); this.setState({modalEliminar: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n\r\n    <Modal isOpen={this.state.modalInsertar}>\r\n                <ModalHeader style={{display: 'block'}}>\r\n                  <span style={{float: 'right'}} onClick={()=>this.modalInsertar()}>x</span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"id_pago_cliente\">CODIGO</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"codigo_pago\" id=\"codigo_pago\" onChange={this.handleChange} value={form?form.codigo_pago: ''}/>\r\n                    <br />\r\n                    <label htmlFor=\"nombre_tp\">NOMBRE</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"nombre_tp\" id=\"nombre_tp\" onChange={this.handleChange} value={form?form.nombre_tp: ''}/>\r\n                    <br />\r\n                    <label htmlFor=\"estado\">ESTADO</label>\r\n                            <select name=\"estado\" value={form ? form.estado : ''} onChange={this.handleChange}>\r\n                            <option value=\"-\">Seleccione</option>\r\n                                <option value=\"Activo\">Activo</option>\r\n                                <option value=\"Inactivo\">Inactivo</option>\r\n                            </select>\r\n                     <br />\r\n                       \r\n                  </div>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                  {this.state.tipoModal=='insertar'?\r\n                    <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\r\n                    Insertar\r\n                  </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\r\n                    Actualizar\r\n                  </button>\r\n  }\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n          </Modal>\r\n\r\n\r\n          <Modal isOpen={this.state.modalEliminar}>\r\n            <ModalBody>\r\n               EstÃ¡s seguro que deseas eliminar el registro de pago {form && form.codigo_pago}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>SÃ­</button>\r\n              <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\r\n            </ModalFooter>\r\n          </Modal>\r\n  </div>\r\n\r\n\r\n\r\n  );\r\n}\r\n}\r\nexport default TipoPago;","C:\\Users\\edcar\\Downloads\\proyect_final\\src\\component\\Pages\\Factura.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":9},{"ruleId":"67","severity":1,"message":"72","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":3,"column":27,"nodeType":"69","messageId":"70","endLine":3,"endColumn":33},{"ruleId":"67","severity":1,"message":"74","line":3,"column":35,"nodeType":"69","messageId":"70","endLine":3,"endColumn":40},{"ruleId":"67","severity":1,"message":"75","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"76","line":5,"column":30,"nodeType":"69","messageId":"70","endLine":5,"endColumn":41},{"ruleId":"67","severity":1,"message":"77","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":16},{"ruleId":"67","severity":1,"message":"78","line":10,"column":7,"nodeType":"69","messageId":"70","endLine":10,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":171,"column":40,"nodeType":"81","messageId":"82","endLine":171,"endColumn":42},{"ruleId":"67","severity":1,"message":"73","line":3,"column":27,"nodeType":"69","messageId":"70","endLine":3,"endColumn":33},{"ruleId":"67","severity":1,"message":"74","line":3,"column":35,"nodeType":"69","messageId":"70","endLine":3,"endColumn":40},{"ruleId":"79","severity":1,"message":"80","line":145,"column":40,"nodeType":"81","messageId":"82","endLine":145,"endColumn":42},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'Popper' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Component' is defined but never used.","'faUserCheck' is defined but never used.","'extend' is defined but never used.","'url2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]